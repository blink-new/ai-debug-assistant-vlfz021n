version: '3.8'

services:
  # Python Backend API
  backend:
    build:
      context: .
      target: backend
    container_name: ai-debug-backend
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./uploads:/app/uploads
      - ./output:/app/output
      - .:/app/src:ro  # Mount source code for development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend (Development)
  frontend-dev:
    build:
      context: .
      target: frontend
    container_name: ai-debug-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - backend
    restart: unless-stopped

  # React Frontend (Production with Nginx)
  frontend-prod:
    build:
      context: .
      target: production
    container_name: ai-debug-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - production

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: ai-debug-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:

networks:
  default:
    name: ai-debug-network